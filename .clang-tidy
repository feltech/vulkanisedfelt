# Exclusions
# - llvmlibc-*
#     Seems very vendor-specific.
# - altera-*
#     FPGA hardware specific.
# - *-default-arguments-calls
#     Often we have to call functions with default arguments.
# - *-braces-around-statements
#     Yes it's bugprone, but conciseness can help readability
# - *-use-trailing-return-type
#     Leading return type is less verbose and more familiar.
# - llvm-header-guard
#     De-facto standard #pragma once is preferred.
# - *-default-arguments-declaration
#     Default arguments are useful.
Checks: >
  *,
  -llvmlibc-*,
  -altera-*,
  -android-*,
  -*-default-arguments-calls,
  -*-braces-around-statements,
  -*-use-trailing-return-type,
  -llvm-header-guard,
  -*-default-arguments-declarations
WarningsAsErrors: '*'
HeaderFilterRegex: '.*'
FormatStyle: file
CheckOptions:
  # Allow ALL_CAPS macros used as constants. Otherwise auto-generated export header is caught.
  - key:             cppcoreguidelines-macro-usage.CheckCapsOnly
    value:           true
  # Allow breaking rule of 5 when only special function is a defaulted destructor.
  - key:             hicpp-special-member-functions.AllowSoleDefaultDtor
    value:           true
  - key:             cppcoreguidelines-special-member-functions.AllowSoleDefaultDtor
    value:           true
  - key:             readability-identifier-naming.ClassCase
    value:           CamelCase
  - key:             readability-identifier-naming.ClassMemberCase
    value:           lower_case
  - key:             readability-identifier-naming.ClassConstantCase
    value:           CamelCase
  - key:             readability-identifier-naming.ClassConstantPrefix
    value:           k
#  - key:             readability-identifier-naming.ConstexprVariableCase
#    value:           CamelCase
#  - key:             readability-identifier-naming.ConstexprVariablePrefix
#    value:           k
  - key:             readability-identifier-naming.EnumCase
    value:           CamelCase
  - key:             readability-identifier-naming.EnumConstantCase
    value:           CamelCase
  - key:             readability-identifier-naming.EnumConstantPrefix
    value:           k
  - key:             readability-identifier-naming.FunctionCase
    value:           lower_case
  - key:             readability-identifier-naming.GlobalConstantCase
    value:           CamelCase
  - key:             readability-identifier-naming.GlobalConstantPrefix
    value:           k
  - key:             readability-identifier-naming.StaticConstantCase
    value:           CamelCase
  - key:             readability-identifier-naming.StaticConstantPrefix
    value:           k
  - key:             readability-identifier-naming.StaticVariableCase
    value:           lower_case
  - key:             readability-identifier-naming.MacroDefinitionCase
    value:           UPPER_CASE
  - key:             readability-identifier-naming.MacroDefinitionIgnoredRegexp
    value:           '^[A-Z]+(_[A-Z]+)*_$'
  - key:             readability-identifier-naming.MemberCase
    value:           lower_case
  - key:             readability-identifier-naming.PrivateMemberCase
    value:           lower_case
  - key:             readability-identifier-naming.PrivateMemberSuffix
    value:           _
  - key:             readability-identifier-naming.PublicMemberCase
    value:           lower_case
  - key:             readability-identifier-naming.PublicMemberSuffix
    value:           ''
  - key:             readability-identifier-naming.NamespaceCase
    value:           lower_case
  - key:             readability-identifier-naming.ParameterCase
    value:           lower_case
  - key:             readability-identifier-naming.TypeAliasCase
    value:           CamelCase
  - key:             readability-identifier-naming.TypedefCase
    value:           CamelCase
  - key:             readability-identifier-naming.VariableCase
    value:           lower_case